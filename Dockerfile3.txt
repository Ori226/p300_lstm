# docker-debian-cuda - Debian 9 with CUDA Toolkit

FROM floydhub/dl-docker:cpu
MAINTAINER gw0 [http://gw.tnode.com/] <gw.2016@tnode.com>



RUN apt-get update
RUN apt-get install -y --force-yes build-essential git libfuse-dev libcurl4-openssl-dev libxml2-dev mime-support automake libtool
RUN apt-get install pkg-config libssl-dev
RUN git clone https://github.com/s3fs-fuse/s3fs-fuse
WORKDIR s3fs-fuse
    RUN ./autogen.sh
RUN ./configure --prefix=/usr --with-openssl
RUN make
RUN sudo make install

ARG AWS_KWYS="pass"
RUN echo ${AWS_KWYS} > ~/.passwd-s3fs


RUN mkdir /tmp/cache # To be used as cache for S3FS
RUN chmod 777 /tmp/cache
RUN mkdir /mnt/s3 # To mount to, use any path you want
RUN chmod 600 ~/.passwd-s3fs
WORKDIR /home/root/

RUN wget https://github.com/libfuse/libfuse/releases/download/fuse-2.9.7/fuse-2.9.7.tar.gz
RUN  tar -xvzf fuse-2.9.7.tar.gz
WORKDIR /home/root/fuse-2.9.7
RUN ./configure
RUN make -j8
RUN make install
RUN ./configure
RUN echo "ori226b  /mnt/s3 fuse.s3fs _netdev,allow_other 0 0" > /etc/fstab
RUN echo "mount -a" >> ~/.bashrc
RUN export PYTHONPATH="${PYTHONPATH}:/code_base"
RUN pip --no-cache-dir install sklearn --upgrade
RUN pip --no-cache-dir install keras --upgrade
RUN python -c "import keras"
RUN echo '{"image_dim_ordering": "th",    "epsilon": 1e-07,    "floatx": "float32",    "backend": "theano"}' > ~/.keras/keras.json
RUN echo export PYTHONPATH="${PYTHONPATH}:/code_base" >> ~/.bashrc
RUN echo ln -s /mnt/s3/dataset/ /data_set >> ~/.bashrc
RUN echo ln -s /mnt/s3/results/ /results >> ~/.bashrc





WORKDIR /code_base/experiments/P300_RSVP/good/


#RUN s3fs -o use_cache=/tmp/cache ori226b /mnt/s3 # With mybucket is your bucket name
